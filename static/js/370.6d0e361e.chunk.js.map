{"version":3,"file":"static/js/370.6d0e361e.chunk.js","mappings":"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","sources":["components/Box/Box.js","components/Loader/Loader.js","helpers/movieApi.js","components/MovieGalleryOnHomePage/MovieGalleryOnHomePage.styled.js","components/MovieGalleryItemOnHomePage/MovieGalleryItemOnHomePage.styled.js","components/MovieGalleryItemOnHomePage/MovieGalleryItemOnHomePage.jsx","components/MovieGalleryOnHomePage/MovieGalleryOnHomePage.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  typography,\n  space,\n  color,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  shadow,\n  grid,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  typography,\n  space,\n  color,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  shadow,\n  grid\n);\n\nexport default Box;\n","import Box from 'components/Box';\nimport React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst Loader = props => {\n  return (\n    <Box\n      pt={3}\n      pr={3}\n      pl={3}\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      justifyContent=\"center\"\n      as=\"ul\"\n      gridGap={props.gap ?? 3}\n    >\n      {Array(props.count)\n        .fill(0)\n        .map((item, idx) => (\n          <Box as=\"li\" key={idx}>\n            <ContentLoader\n              speed={2}\n              backgroundColor=\"#545454\"\n              foregroundColor=\"#f3f2f2\"\n              {...props}\n            >\n              <rect\n                x=\"0\"\n                y=\"0\"\n                rx=\"0\"\n                ry=\"0\"\n                width={props.width}\n                height={props.height}\n              />\n            </ContentLoader>\n          </Box>\n        ))}\n    </Box>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst API_KEY = '7254cc1ad31c69d2a534e79f9d285c60';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport async function getTrendingFilms(abort) {\n  const filmsPath = `/3/trending/movie/day`;\n  const films = await axios.get(filmsPath, {\n    signal: abort.signal,\n    params: { api_key: API_KEY },\n  });\n  return films.data.results;\n}\n\nexport async function getFilmById(movieId, abort) {\n  const filmPath = `/3/movie/${movieId}`;\n  const filmInfo = await axios.get(filmPath, {\n    signal: abort.signal,\n    params: { api_key: API_KEY },\n  });\n  return filmInfo.data;\n}\n\nexport async function getFilmCredits(movieId, abort) {\n  const filmPath = `/3/movie/${movieId}/credits`;\n  const filmInfo = await axios.get(filmPath, {\n    signal: abort.signal,\n    params: { api_key: API_KEY },\n  });\n  return filmInfo.data.cast;\n}\n\nexport async function getFilmReviews(movieId, abort) {\n  const filmPath = `/3/movie/${movieId}/reviews`;\n  const filmInfo = await axios.get(filmPath, {\n    signal: abort.signal,\n    params: { api_key: API_KEY },\n  });\n  return filmInfo.data.results;\n}\n\nexport async function searchMoviesByName(movieName, page, abort) {\n  const filmPath = `/3/search/movie`;\n  const filmInfo = await axios.get(filmPath, {\n    signal: abort.signal,\n    params: { api_key: API_KEY, query: movieName, page: page },\n  });\n  return filmInfo.data;\n}\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: ${p => p.theme.space[3]}px;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const MovieListItem = styled.li`\n  border-radius: ${p => p.theme.radii.med};\n  overflow: hidden;\n  position: relative;\n  transition: box-shadow 300ms ease-in-out;\n\n  :hover,\n  :focus {\n    box-shadow: 1px 1px 27px 4px ${p => p.theme.colors.hoverText};\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const CardLink = styled(Link)`\n  display: block;\n  transition: transform 400ms ease-in-out;\n  :hover {\n    transform: scale(1.1);\n    p {\n      color: ${p => p.theme.colors.hoverText};\n    }\n  }\n`;\n\nexport const Title = styled.p`\n  position: absolute;\n  bottom: 5%;\n  left: 10%;\n  color: ${p => p.theme.colors.title};\n  font-weight: ${p => p.theme.fontWeights.heading};\n  font-size: ${p => p.theme.fontSizes[2]}px;\n  text-decoration: underline;\n  transition: color 400ms ease-in-out;\n`;\n\nexport const Img = styled.img`\n  max-width: 100%;\n  display: block;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { CardLink, Img, Title } from './MovieGalleryItemOnHomePage.styled';\nimport notFound from '../../images/notFound.png';\n\nconst MovieGalleryItemOnHomePage = ({ movie }) => {\n  const location = useLocation();\n  const { id, backdrop_path, title } = movie;\n\n  return (\n    <CardLink to={`movies/${id}`} state={{ from: location }}>\n      <Img\n        height=\"236\"\n        width=\"420\"\n        src={\n          backdrop_path\n            ? `https://image.tmdb.org/t/p/w500/${backdrop_path}`\n            : notFound\n        }\n        alt={title}\n      />\n\n      <Title>{title}</Title>\n    </CardLink>\n  );\n};\n\nexport default MovieGalleryItemOnHomePage;\n","import { MovieList, MovieListItem } from './MovieGalleryOnHomePage.styled';\nimport MovieGalleryItemOnHomePage from 'components/MovieGalleryItemOnHomePage';\n\nconst MovieGalleryOnHomePage = ({ movies }) => {\n  return (\n    <>\n      {movies.length > 0 && (\n        <MovieList>\n          {movies.map(movie => (\n            <MovieListItem key={movie.id}>\n              <MovieGalleryItemOnHomePage movie={movie} />\n            </MovieListItem>\n          ))}\n        </MovieList>\n      )}\n    </>\n  );\n};\n\nexport default MovieGalleryOnHomePage;\n","import { useState, useEffect } from 'react';\nimport { getTrendingFilms } from 'helpers/movieApi';\nimport MovieGalleryOnHomePage from 'components/MovieGalleryOnHomePage';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    (async function fetchFilms() {\n      try {\n        setIsLoading(true);\n        const films = await getTrendingFilms(controller);\n        setMovies(films);\n      } catch {\n        return;\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader count={12} width={420} height={236} />}\n      {!isLoading && <MovieGalleryOnHomePage movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["styled","typography","space","color","layout","flexbox","background","border","position","shadow","grid","props","pt","pr","pl","display","flexWrap","justifyContent","as","gridGap","gap","Array","count","fill","map","item","idx","speed","backgroundColor","foregroundColor","x","y","rx","ry","width","height","API_KEY","getTrendingFilms","abort","axios","signal","params","api_key","films","data","results","getFilmById","movieId","filmPath","filmInfo","getFilmCredits","cast","getFilmReviews","searchMoviesByName","movieName","page","query","MovieList","p","theme","MovieListItem","radii","med","colors","hoverText","CardLink","Link","Title","title","fontWeights","heading","fontSizes","Img","movie","location","useLocation","id","backdrop_path","to","state","from","src","notFound","alt","movies","length","useState","setMovies","isLoading","setIsLoading","useEffect","controller","AbortController","Loader"],"sourceRoot":""}